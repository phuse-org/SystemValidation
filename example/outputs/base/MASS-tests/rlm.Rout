
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(MASS)
> 
> ## Based on incorrect 'bug' report
> 
> hills$ispeed <- hills$time/hills$dist
> hills$grad <- hills$climb/hills$dist
> 
> ## weighted fit
> fit0 <- rlm(time ~ dist + climb - 1, data = hills,
+             weights = 1/dist^2, method = "MM")
> summary(fit0, cor = FALSE)

Call: rlm(formula = time ~ dist + climb - 1, data = hills, weights = 1/dist^2, 
    method = "MM")
Residuals:
     Min       1Q   Median       3Q      Max 
-2.87951 -0.42447 -0.05091  0.68713 20.22420 

Coefficients:
      Value   Std. Error t value
dist   5.1552  0.3724    13.8427
climb  0.0072  0.0013     5.3466

Residual standard error: 0.8538 on 33 degrees of freedom
> ## equivalent to
> fit1 <- rlm(ispeed ~ grad, data = hills, method = "MM")
> summary(fit1, cor = FALSE)

Call: rlm(formula = ispeed ~ grad, data = hills, method = "MM")
Residuals:
     Min       1Q   Median       3Q      Max 
-2.87951 -0.42447 -0.05091  0.68713 20.22420 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.1552  0.3724    13.8427
grad         0.0072  0.0013     5.3466

Residual standard error: 0.8538 on 33 degrees of freedom
> 
> cf0 <- coef(summary(fit0))
> cf1 <- coef(summary(fit1))
> rownames(cf1) <- rownames(cf0)
> stopifnot(all.equal(cf0, cf1))
> stopifnot(all.equal(weighted.residuals(fit0), residuals(fit1)))
> 
> # test other cases
> fit0 <- rlm(time ~ dist + climb - 1, data = hills, weights = 1/dist^2)
> summary(fit0, cor = FALSE)

Call: rlm(formula = time ~ dist + climb - 1, data = hills, weights = 1/dist^2)
Residuals:
    Min      1Q  Median      3Q     Max 
-2.9622 -0.4818 -0.1089  0.6138 20.1709 

Coefficients:
      Value   Std. Error t value
dist   5.1762  0.3810    13.5853
climb  0.0075  0.0014     5.4284

Residual standard error: 0.8693 on 33 degrees of freedom
> ## equivalent to
> fit1 <- rlm(ispeed ~ grad, data = hills)
> summary(fit1, cor = FALSE)

Call: rlm(formula = ispeed ~ grad, data = hills)
Residuals:
    Min      1Q  Median      3Q     Max 
-2.9622 -0.4818 -0.1089  0.6138 20.1709 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.1762  0.3810    13.5853
grad         0.0075  0.0014     5.4284

Residual standard error: 0.8693 on 33 degrees of freedom
> 
> cf0 <- coef(summary(fit0))
> cf1 <- coef(summary(fit1))
> rownames(cf1) <- rownames(cf0)
> stopifnot(all.equal(cf0, cf1))
> stopifnot(all.equal(weighted.residuals(fit0), residuals(fit1)))
> 
> fit0 <- rlm(time ~ dist + climb - 1, data = hills, weights = 1/dist^2,
+             scale.est = "Huber")
> summary(fit0, cor = FALSE)

Call: rlm(formula = time ~ dist + climb - 1, data = hills, weights = 1/dist^2, 
    scale.est = "Huber")
Residuals:
    Min      1Q  Median      3Q     Max 
-2.9681 -0.4912 -0.1190  0.6063 20.1600 

Coefficients:
      Value   Std. Error t value
dist   5.1926  0.4013    12.9394
climb  0.0074  0.0014     5.1209

Residual standard error: 1.002 on 33 degrees of freedom
> ## equivalent to
> fit1 <- rlm(ispeed ~ grad, data = hills, scale.est = "Huber")
> summary(fit1, cor = FALSE)

Call: rlm(formula = ispeed ~ grad, data = hills, scale.est = "Huber")
Residuals:
    Min      1Q  Median      3Q     Max 
-2.9681 -0.4912 -0.1190  0.6063 20.1600 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.1926  0.4013    12.9394
grad         0.0074  0.0014     5.1209

Residual standard error: 1.002 on 33 degrees of freedom
> 
> cf0 <- coef(summary(fit0))
> cf1 <- coef(summary(fit1))
> rownames(cf1) <- rownames(cf0)
> stopifnot(all.equal(cf0, cf1))
> stopifnot(all.equal(weighted.residuals(fit0), residuals(fit1)))
> 
> 
> ## cf lm fits
> 
> fit2 <- lm(time ~ dist + climb - 1, data = hills, weights = 1/dist^2)
> fit3 <- lm(ispeed ~ grad, data = hills)
> stopifnot(all.equal(weighted.residuals(fit2), residuals(fit3)))
> 
> 
> ## case weights: can't do MM as no weighted lqs.
> wts <- rep(1, 35)
> wts[c(1,11,21)] <- 10
> h2 <- hills[rep(1:35, times=wts), ]
> fit4 <- lm(ispeed ~ grad, data = hills, weights = wts)
> fit5 <- lm(ispeed ~ grad, data = h2)
> ## same coefs, different se's.
> fit6 <- rlm(ispeed ~ grad, data = h2, acc = 1e-10)
> fit7 <- rlm(ispeed ~ grad, data = hills,
+             weights = wts, wt.method = "case", acc = 1e-10)
> summary(fit6)

Call: rlm(formula = ispeed ~ grad, data = h2, acc = 1e-10)
Residuals:
    Min      1Q  Median      3Q     Max 
-2.8887 -0.7127 -0.2522  0.9531 20.0692 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.4714  0.2364    23.1400
grad         0.0058  0.0010     5.7758

Residual standard error: 1.089 on 60 degrees of freedom
> summary(fit7)

Call: rlm(formula = ispeed ~ grad, data = hills, weights = wts, acc = 1e-10, 
    wt.method = "case")
Residuals:
     Min       1Q   Median       3Q      Max 
-2.88870 -0.52504  0.01655  0.77918 20.06919 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.4714  0.2364    23.1400
grad         0.0058  0.0010     5.7758

Residual standard error: 1.089 on 60 degrees of freedom
> stopifnot(all.equal(coef(summary(fit6)), coef(summary(fit7))))
> summary(fit6, "XtWX")

Call: rlm(formula = ispeed ~ grad, data = h2, acc = 1e-10)
Residuals:
    Min      1Q  Median      3Q     Max 
-2.8887 -0.7127 -0.2522  0.9531 20.0692 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.4714  0.2372    23.0642
grad         0.0058  0.0010     5.6555

Residual standard error: 1.089 on 60 degrees of freedom
> summary(fit7, "XtWX")

Call: rlm(formula = ispeed ~ grad, data = hills, weights = wts, acc = 1e-10, 
    wt.method = "case")
Residuals:
     Min       1Q   Median       3Q      Max 
-2.88870 -0.52504  0.01655  0.77918 20.06919 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.4714  0.2372    23.0642
grad         0.0058  0.0010     5.6555

Residual standard error: 1.089 on 60 degrees of freedom
> stopifnot(all.equal(coef(summary(fit6, "XtWX")), coef(summary(fit7, "XtWX"))))
> 
> fit8 <- rlm(ispeed ~ grad, data = h2, scale.est = "Huber", acc = 1e-10)
> fit9 <- rlm(ispeed ~ grad, data = hills, scale.est = "Huber",
+             weights = wts, wt.method = "case", acc = 1e-10)
> summary(fit8)

Call: rlm(formula = ispeed ~ grad, data = h2, scale.est = "Huber", 
    acc = 1e-10)
Residuals:
    Min      1Q  Median      3Q     Max 
-2.8855 -0.7106 -0.2498  0.9556 20.0710 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.4711  0.2349    23.2887
grad         0.0058  0.0010     5.8005

Residual standard error: 0.9675 on 60 degrees of freedom
> summary(fit9)

Call: rlm(formula = ispeed ~ grad, data = hills, weights = wts, scale.est = "Huber", 
    acc = 1e-10, wt.method = "case")
Residuals:
     Min       1Q   Median       3Q      Max 
-2.88552 -0.52218  0.02236  0.78380 20.07102 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.4711  0.2349    23.2887
grad         0.0058  0.0010     5.8005

Residual standard error: 0.9675 on 60 degrees of freedom
> stopifnot(all.equal(coef(summary(fit8)), coef(summary(fit9))))
> summary(fit8, "XtWX")

Call: rlm(formula = ispeed ~ grad, data = h2, scale.est = "Huber", 
    acc = 1e-10)
Residuals:
    Min      1Q  Median      3Q     Max 
-2.8855 -0.7106 -0.2498  0.9556 20.0710 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.4711  0.2358    23.2037
grad         0.0058  0.0010     5.6505

Residual standard error: 0.9675 on 60 degrees of freedom
> summary(fit9, "XtWX")

Call: rlm(formula = ispeed ~ grad, data = hills, weights = wts, scale.est = "Huber", 
    acc = 1e-10, wt.method = "case")
Residuals:
     Min       1Q   Median       3Q      Max 
-2.88552 -0.52218  0.02236  0.78380 20.07102 

Coefficients:
            Value   Std. Error t value
(Intercept)  5.4711  0.2358    23.2037
grad         0.0058  0.0010     5.6505

Residual standard error: 0.9675 on 60 degrees of freedom
> stopifnot(all.equal(coef(summary(fit8, "XtWX")), coef(summary(fit9, "XtWX"))))
> 
> 
> ## w was a matrix under some initializations
> x <- matrix(1:200, 100,2)
> B <- c(2.5, -1.3)
> y <- x %*% B + rnorm(100)
> r1 <- rlm(x, y, init=B, psi=psi.huber)
> r2 <- rlm(x, y, init=B, psi=psi.bisquare)
> r3 <- rlm(x, y, init=B, psi=psi.hampel)   # failed
> r4 <- rlm(x, y, psi=psi.hampel)
> 
> ## lqs with intercept lost contrasts
> dat <- data.frame(trt = factor(rep(LETTERS[1:2], each=3)),resp = rt(6, df=3))
> fit <- lqs(resp ~ trt, data = dat, contrasts = list(trt = "contr.sum"))
> stopifnot(identical(predict(fit), predict(fit, newdata = dat)))
> 
> 
> ### Andr\'e Gillibert 2020-08-14, models with offset() term:
> df <- data.frame(outcome=1:10, off = rep(100, 10))
> ## NB: lm(outome ~ 1, data=df, offset = off) would be different.
> fit_lm <- lm(outcome ~ offset(off), data = df)
> fit_rlm <- rlm(outcome ~ offset(off), data = df)
> 
> ## prediction of fit_rlm and fit_lm are identical for this simple model
> stopifnot(all.equal(predict(fit_rlm, newdata=df), predict(fit_lm, newdata=df)))
> 
> ## but predict of fit_rlm was not consistent with itself
> ## when using the same dataset with newdata
> stopifnot(all.equal(predict(fit_rlm), predict(fit_rlm, newdata=df)))
> 
> # similarly, fitted()+resid() was inconsistent for fit_rlm
> stopifnot(all.equal(df$outcome, unname(fitted(fit_rlm)+resid(fit_rlm))))
> 
