
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(compiler)
> 
> f <- function(x) x
> 
> g <- function(x) repeat if (x) f(return(1)) else return(2)
> gc <- cmpfun(g)
> stopifnot(identical(g(TRUE), gc(TRUE)))
> stopifnot(identical(g(FALSE), gc(FALSE)))
> 
> h <- function(x) { repeat if (x) f(return(1)) else break; 2 }
> hc <- cmpfun(h)
> stopifnot(identical(h(TRUE), hc(TRUE)))
> stopifnot(identical(h(FALSE), hc(FALSE)))
> 
> k <- function(x) { repeat if (x) return(1) else f(break); 2 }
> kc <- cmpfun(k)
> stopifnot(identical(k(TRUE), kc(TRUE)))
> stopifnot(identical(k(FALSE), kc(FALSE)))
> 
> ## **** need more variations on this.
> 
> ## this would give an error prior to fixing a binding cache bug
> f <- function(x) { for (y in x) { z <- y; g(break) } ; z }
> g <- function(x) x
> cmpfun(f)(c(1,2,3))
[1] 1
> 
> 
